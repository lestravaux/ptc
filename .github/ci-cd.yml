name: CI/CD Pipeline
on: [push]

jobs:

  deploy-eks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.1.0'  # Specify your Terraform version

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform-eks  # Path to your Terraform code

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform-eks

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform-eks

    - name: Get EKS Cluster Name
      id: eks_output
      run: |
        export CLUSTER_NAME=$(terraform output -raw cluster_name)
        echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
        echo "EKS Cluster Name: $CLUSTER_NAME"

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.21.0'  # Set your desired kubectl version

    - name: Configure kubectl for EKS
      run: |
        aws eks --region us-west-2 update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region us-east-2

  build-test:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: ./app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: ./app
        run: |
          pytest --maxfail=1 --disable-warnings -q

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          IMAGE_NAME=ptc-image
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.21.0'

      - name: Set up Helm
        uses: azure/setup-helm@v1

      # Configure kubeconfig here â€“ you can use aws eks update-kubeconfig if deploying to EKS
      # - name: Configure kubeconfig
      #   run: |
      #     aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy with Helm
        working-directory: ./helm/python-api
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          helm upgrade --install python-api . \
            --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/ptc-repo \
            --set image.tag=$IMAGE_TAG
